angular.module("FourthBlightApp",["ui.router","ngAnimate"]),angular.module("FourthBlightApp",["ui.router","ngAnimate","toastr"]).controller("ApplicationCtrl",["$scope","$location","$window","toastr",function(t,e,l,r){}]),angular.module("FourthBlightApp").controller("FaqCtrl",["$scope",function(t){}]),angular.module("FourthBlightApp").controller("FurtherCtrl",["$scope",function(t){}]),angular.module("FourthBlightApp").controller("GeneratorCtrl",["$scope",function(t){}]),angular.module("FourthBlightApp").controller("HomeCtrl",["$scope","$location","$window",function(t,e,l){}]),angular.module("FourthBlightApp").controller("LocSearchCtrl",["$scope","SrdSvc",function(t,e){document.getElementById("location-text").focus(),document.getElementById("spell-btn").classList.remove("selected-search"),document.getElementById("monst-btn").classList.remove("selected-search"),document.getElementById("loc-btn").classList.add("selected-search"),t.locationResults={},t.searchLocations=function(l){l.length>=1&&e.getLocations(l).then(function(e){t.locationResults=e})}}]),angular.module("FourthBlightApp").controller("MapCtrl",["$scope",function(t){function e(t){g=t.fill?-1:1,l.apply(this,arguments)}function l(t){g&&(d3.select(this).classed("fill",t.fill=g>0),d.call(o))}function r(){l.apply(this,arguments),g=0}function o(t){t.attr("d",h(topojson.mesh(p,p.objects.hexagons,function(t,e){return t.fill^e.fill})))}function n(t,e,l){for(var r=2*t*Math.sin(Math.PI/3),o=1.5*t,n=Math.ceil((l+t)/o)+1,a=Math.ceil(e/r)+1,s=[],c=[],u=-1;u<=n;++u)for(var p=-1;p<=a;++p){var i=2*u,h=2*(p+(1&u)/2);c.push([[h,i-1],[1,1]],[[h+1,i],[0,1]],[[h+1,i+1],[-1,1]])}for(var u=0,m=3;u<n;++u,m+=6)for(var p=0;p<a;++p,m+=3)s.push({type:"Polygon",arcs:[[m,m+1,m+2,~(m+3*(a+2-(1&u))),~(m-2),~(m-3*(a+2+(1&u))+2)]],fill:Math.random()>p/a*2});return{transform:{translate:[0,0],scale:[1,1]},objects:{hexagons:{type:"GeometryCollection",geometries:s}},arcs:c}}function a(t){var e=2*t*Math.sin(Math.PI/3),l=1.5*t;return{stream:function(t){return{point:function(r,o){t.point(r*e/2,(o-(2-(1&o))/3)*l/2)},lineStart:function(){t.lineStart()},lineEnd:function(){t.lineEnd()},polygonStart:function(){t.polygonStart()},polygonEnd:function(){t.polygonEnd()}}}}}var s=document.getElementById("pageContent").offsetWidth-100,c=700,u=25,p=n(u,s,c),i=a(u),h=d3.geo.path().projection(i),m=d3.select("#hex-map").append("svg").attr("width",s).attr("height",c);m.append("g").attr("class","hexagon").selectAll("path").data(p.objects.hexagons.geometries).enter().append("path").attr("d",function(t){return h(topojson.feature(p,t))}).attr("class",function(t){return t.fill?"fill":null}).on("mousedown",e).on("mousemove",l).on("mouseup",r),m.append("path").datum(topojson.mesh(p,p.objects.hexagons)).attr("class","mesh").attr("d",h);var d=m.append("path").attr("class","border").call(o),g=0}]),angular.module("FourthBlightApp").controller("MonSearchCtrl",["$scope","SrdSvc",function(t,e){document.getElementById("monster-text").focus(),document.getElementById("spell-btn").classList.remove("selected-search"),document.getElementById("loc-btn").classList.remove("selected-search"),document.getElementById("monst-btn").classList.add("selected-search"),t.monsterResults={},t.searchMonsters=function(l){l.length>=1&&e.getMonsters(l).then(function(e){t.monsterResults=e})}}]),angular.module("FourthBlightApp").config(["$stateProvider","$urlRouterProvider",function(t,e){e.otherwise("/"),t.state("home",{url:"/",templateUrl:"/templates/home.html",controller:"HomeCtrl"}).state("generators",{url:"/generators",templateUrl:"/templates/generator.html",controller:"GeneratorCtrl"}).state("faq",{url:"/faq",templateUrl:"/templates/faq.html",controller:"FaqCtrl"}).state("further",{url:"/further",templateUrl:"/templates/further.html",controller:"FurtherCtrl"}).state("srd",{url:"/srd",templateUrl:"/templates/srd.html",controller:"SrdCtrl"}).state("srd.spellSearch",{parent:"srd",templateUrl:"/templates/spellSearch.html",controller:"SpellSearchCtrl"}).state("srd.locSearch",{parent:"srd",templateUrl:"/templates/locSearch.html",controller:"LocSearchCtrl"}).state("srd.monSearch",{parent:"srd",templateUrl:"/templates/monSearch.html",controller:"MonSearchCtrl"}).state("map",{url:"/map",templateUrl:"/templates/map.html",controller:"MapCtrl"})}]),angular.module("FourthBlightApp").controller("SpellSearchCtrl",["$scope","SrdSvc",function(t,e){document.getElementById("spell-text").focus(),document.getElementById("loc-btn").classList.remove("selected-search"),document.getElementById("monst-btn").classList.remove("selected-search"),document.getElementById("spell-btn").classList.add("selected-search"),t.spellResults={},t.searchSpell=function(l){l.length>=3&&e.getSpells(l).then(function(e){t.spellResults=e})}}]),angular.module("FourthBlightApp").controller("SrdCtrl",["$scope","SrdSvc",function(t,e){}]),angular.module("FourthBlightApp").service("SrdSvc",["$http",function(t){var e=this;e.getSpells=function(e){return t.get("/api/spells/"+e).then(function(t){return t.data})},e.getLocations=function(e){return t.get("/api/locations/"+e).then(function(t){return t.data})},e.getMonsters=function(e){return t.get("/api/monsters/"+e).then(function(t){return t.data})}}]);
//# sourceMappingURL=data:application/json;base64,
